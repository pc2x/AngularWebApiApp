1. appsettings.json debe de venir la conexión a la db de docker

{
  "ConnectionStrings": {
    "DefaultConnection": "server=sqlserver22,1433;database=WebApiNetCore;MultipleActiveResultSets=true;user=sa;pwd=Adminis09;"
  },

donde sqlserver22 es el alias que se le ha dado al container en la red

2. launchSettings.json en el apartado de Docker (realmente el que hace el cambio es en csproj)
"Docker": {
  "commandName": "Docker",
  "launchBrowser": true,
 "launchUrl": "{Scheme}://{ServiceHost}:{ServicePort}/swagger",
  "environmentVariables": {
    "ASPNETCORE_URLS": "https://+:443;http://+:80"
  },
  "publishAllPorts": true,
  "useSSL": true
}

modificar launchUrl para que puedas poner un puerto fijo
original:       
"launchUrl": "{Scheme}://{ServiceHost}:{ServicePort}/swagger",
debe quedar:
 "launchUrl": "{Scheme}://{ServiceHost}:5000/swagger",

3. modificar el archivo de proyecto .csproj (aqui puedes configurar que puerto va usar docker)

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <UserSecretsId>f39f0b7e-84d2-4eaf-9cd2-4a4994de5837</UserSecretsId>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <DockerfileContext>.</DockerfileContext>

     <!-- se agregan los argumentos que tomará visual studio al ejecutar docker run -->
   <DockerfileRunArguments>--network webapinetwork -p 5000:443</DockerfileRunArguments>
  
</PropertyGroup>